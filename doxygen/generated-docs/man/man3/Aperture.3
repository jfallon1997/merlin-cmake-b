.TH "Aperture" 3 "Fri Aug 4 2017" "Version 5.02" "Merlin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Aperture
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Aperture\&.h>\fP
.PP
Inherited by \fBCircularAperture\fP, \fBEllipticalAperture\fP, \fBInterpolatedCircularAperture\fP, \fBInterpolatedEllipticalAperture\fP, \fBInterpolatedOctagonalAperture\fP, \fBInterpolatedRectEllipseAperture\fP, \fBOctagonalAperture\fP, \fBRectangularAperture\fP, and \fBRectEllipseAperture\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBAperture\fP (\fBMaterial\fP *m=nullptr)"
.br
.ti -1c
.RI "virtual \fB~Aperture\fP ()"
.br
.ti -1c
.RI "virtual bool \fBPointInside\fP (double x, double y, double z) const =0"
.br
.ti -1c
.RI "bool \fBPointInside\fP (const \fBPoint3D\fP &p) const"
.br
.ti -1c
.RI "virtual double \fBGetRadiusAt\fP (double phi, double z) const =0"
.br
.ti -1c
.RI "virtual std::string \fBGetApertureType\fP () const =0"
.br
.ti -1c
.RI "\fBMaterial\fP * \fBGetMaterial\fP () const"
.br
.ti -1c
.RI "void \fBSetMaterial\fP (\fBMaterial\fP *m)"
.br
.ti -1c
.RI "virtual void \fBprintout\fP (std::ostream &out) const"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBMaterial\fP * \fBApertureMaterial\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Represents the cross section of the vacuum pipe or other collimating aperture\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Aperture::Aperture (\fBMaterial\fP * m = \fCnullptr\fP)\fC [inline]\fP"
Constructor 
.PP
\fBParameters:\fP
.RS 4
\fIm\fP The material to attach to this aperture\&. 
.RE
.PP

.SS "Aperture::~Aperture ()\fC [virtual]\fP"
Destructor 
.SH "Member Function Documentation"
.PP 
.SS "virtual std::string Aperture::GetApertureType () const\fC [pure virtual]\fP"
Returns the type of the aperture\&. 
.PP
\fBReturns:\fP
.RS 4
A string containing the type of the aperture\&. 
.RE
.PP

.PP
Implemented in \fBOctagonalAperture\fP, \fBEllipticalAperture\fP, \fBInterpolatedOctagonalAperture\fP, \fBInterpolatedEllipticalAperture\fP, \fBInterpolatedCircularAperture\fP, \fBCircularAperture\fP, \fBInterpolatedRectEllipseAperture\fP, \fBRectangularAperture\fP, and \fBRectEllipseAperture\fP\&.
.SS "\fBMaterial\fP * Aperture::GetMaterial () const"
Gets the material associated with this aperture\&. 
.PP
\fBReturns:\fP
.RS 4
A pointer to a \fBMaterial\fP class attached to this aperture\&. 
.RE
.PP

.SS "virtual double Aperture::GetRadiusAt (double phi, double z) const\fC [pure virtual]\fP"
Returns the radius to the aperture at location z and angle phi\&. 
.PP
\fBParameters:\fP
.RS 4
\fIphi\fP The angle\&. 
.br
\fIz\fP The z position of the particle\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
A double containing the aperture radius\&. 
.RE
.PP

.PP
Implemented in \fBOctagonalAperture\fP, \fBEllipticalAperture\fP, \fBInterpolatedOctagonalAperture\fP, \fBInterpolatedEllipticalAperture\fP, \fBInterpolatedCircularAperture\fP, \fBCircularAperture\fP, \fBInterpolatedRectEllipseAperture\fP, \fBRectangularAperture\fP, and \fBRectEllipseAperture\fP\&.
.SS "virtual bool Aperture::PointInside (double x, double y, double z) const\fC [pure virtual]\fP"
Returns true if the point (x,y,z) is within the aperture\&. 
.PP
\fBParameters:\fP
.RS 4
\fIx\fP The x coordinate of the particle 
.br
\fIy\fP The y coordinate of the particle 
.br
\fIz\fP The z coordinate of the particle 
.RE
.PP
\fBReturns:\fP
.RS 4
A bool set to true if the specified point, is within the \fBAperture\fP\&. false if it is not\&. 
.RE
.PP

.PP
Implemented in \fBOctagonalAperture\fP, \fBEllipticalAperture\fP, \fBInterpolatedOctagonalAperture\fP, \fBInterpolatedEllipticalAperture\fP, \fBOneSidedUnalignedCollimatorAperture\fP, \fBInterpolatedCircularAperture\fP, \fBCircularAperture\fP, \fBUnalignedCollimatorAperture\fP, \fBInterpolatedRectEllipseAperture\fP, \fBCollimatorAperture\fP, \fBRectangularAperture\fP, and \fBRectEllipseAperture\fP\&.
.SS "bool Aperture::PointInside (const \fBPoint3D\fP & p) const\fC [inline]\fP"
Returns true if the point p is within the aperture\&. 
.PP
\fBParameters:\fP
.RS 4
\fIp\fP 3D point reference to check 
.RE
.PP
\fBReturns:\fP
.RS 4
A bool set to true if the specified point, is within the \fBAperture\fP\&. false if it is not\&. 
.RE
.PP

.SS "void Aperture::printout (std::ostream & out) const\fC [virtual]\fP"
Prints out the \fBAperture\fP parameters to a specified stream\&. 
.PP
\fBParameters:\fP
.RS 4
\fIout\fP The output stream to use\&. 
.RE
.PP

.PP
Reimplemented in \fBOctagonalAperture\fP, \fBEllipticalAperture\fP, \fBInterpolatedOctagonalAperture\fP, \fBInterpolatedEllipticalAperture\fP, \fBInterpolatedCircularAperture\fP, \fBCircularAperture\fP, \fBInterpolatedRectEllipseAperture\fP, \fBRectangularAperture\fP, and \fBRectEllipseAperture\fP\&.
.SS "void Aperture::SetMaterial (\fBMaterial\fP * m)"
Sets the material associated with this aperture\&. 
.PP
\fBParameters:\fP
.RS 4
\fIm\fP The material to attach to this aperture\&. 
.RE
.PP

.SH "Member Data Documentation"
.PP 
.SS "\fBMaterial\fP* Aperture::ApertureMaterial\fC [protected]\fP"
The \fBMaterial\fP of this aperture\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Merlin from the source code\&.
