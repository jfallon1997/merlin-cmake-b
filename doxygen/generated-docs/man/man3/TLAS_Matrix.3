.TH "TLAS::Matrix< T >" 3 "Fri Aug 4 2017" "Version 5.02" "Merlin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
TLAS::Matrix< T >
.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef T \fBvalue_type\fP"
.br
.ti -1c
.RI "typedef std::valarray< T > \fBarray_type\fP"
.br
.ti -1c
.RI "typedef std::slice \fBslice_type\fP"
.br
.ti -1c
.RI "typedef std::gslice \fBgslice_type\fP"
.br
.ti -1c
.RI "typedef std::valarray< size_t > \fBindex_array_type\fP"
.br
.ti -1c
.RI "typedef T * \fBiterator\fP"
.br
.ti -1c
.RI "typedef const T * \fBconst_iterator\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBMatrix\fP (Dimension rows, Dimension cols)"
.br
.ti -1c
.RI "\fBMatrix\fP (Dimension rows, Dimension cols, const T &val)"
.br
.ti -1c
.RI "\fBMatrix\fP (\fBIdentityMatrix\fP I)"
.br
.ti -1c
.RI "template<class U > \fBMatrix\fP (const \fBMatrix\fP< U > &rhs)"
.br
.ti -1c
.RI "\fBMatrix\fP< T > & \fBoperator=\fP (const \fBMatrix\fP< T > &m)"
.br
.ti -1c
.RI "\fBMatrix\fP< T > & \fBoperator=\fP (const T &val)"
.br
.ti -1c
.RI "\fBMatrix\fP< T > & \fBoperator=\fP (const \fBConstSubMatrix\fP< T > &sm)"
.br
.ti -1c
.RI "\fBMatrix\fP< T > & \fBcopy\fP (const \fBMatrix\fP< T > &rhs)"
.br
.ti -1c
.RI "\fBMatrix\fP< T > & \fBcopy\fP (const \fBConstSubMatrix\fP< T > &rhs)"
.br
.ti -1c
.RI "\fBMatrix\fP< T > & \fBcopy\fP (\fBIdentityMatrix\fP I)"
.br
.ti -1c
.RI "Dimension \fBnrows\fP () const"
.br
.ti -1c
.RI "Dimension \fBncols\fP () const"
.br
.ti -1c
.RI "\fBMatrixDim\fP \fBdim\fP () const"
.br
.ti -1c
.RI "void \fBredim\fP (Dimension n, Dimension m)"
.br
.ti -1c
.RI "void \fBredim\fP (\fBMatrixDim\fP md)"
.br
.ti -1c
.RI "T & \fBoperator()\fP (Subscript i, Subscript j)"
.br
.ti -1c
.RI "T \fBoperator()\fP (Subscript i, Subscript j) const"
.br
.ti -1c
.RI "\fBSubVector\fP< T > \fBoperator()\fP (Subscript i, Range col_r)"
.br
.ti -1c
.RI "\fBSubVector\fP< T > \fBoperator()\fP (Range row_r, Subscript j)"
.br
.ti -1c
.RI "\fBSubMatrix\fP< T > \fBoperator()\fP (const Range &row_r, const Range &col_r)"
.br
.ti -1c
.RI "\fBSubVector\fP< T > \fBrow\fP (Subscript i)"
.br
.ti -1c
.RI "\fBSubVector\fP< T > \fBcolumn\fP (Subscript j)"
.br
.ti -1c
.RI "\fBConstSubVector\fP< T > \fBoperator()\fP (Subscript i, Range col_r) const"
.br
.ti -1c
.RI "\fBConstSubVector\fP< T > \fBoperator()\fP (Range row_r, Subscript j) const"
.br
.ti -1c
.RI "\fBConstSubMatrix\fP< T > \fBoperator()\fP (const Range &row_r, const Range &col_r) const"
.br
.ti -1c
.RI "\fBConstSubVector\fP< T > \fBrow\fP (Subscript i) const"
.br
.ti -1c
.RI "\fBConstSubVector\fP< T > \fBcolumn\fP (Subscript j) const"
.br
.ti -1c
.RI "\fBSubVector\fP< T > \fBoperator[]\fP (Subscript i)"
.br
.ti -1c
.RI "\fBConstSubVector\fP< T > \fBoperator[]\fP (Subscript i) const"
.br
.ti -1c
.RI "\fBMatrix\fP< T > & \fBoperator+=\fP (const T &val)"
.br
.ti -1c
.RI "\fBMatrix\fP< T > & \fBoperator\-=\fP (const T &val)"
.br
.ti -1c
.RI "\fBMatrix\fP< T > & \fBoperator*=\fP (const T &val)"
.br
.ti -1c
.RI "\fBMatrix\fP< T > & \fBoperator/=\fP (const T &val)"
.br
.ti -1c
.RI "\fBMatrix\fP< T > & \fBoperator+=\fP (const \fBMatrix\fP< T > &m)"
.br
.ti -1c
.RI "\fBMatrix\fP< T > & \fBoperator\-=\fP (const \fBMatrix\fP< T > &m)"
.br
.ti -1c
.RI "\fBMatrix\fP< T > & \fBoperator*=\fP (const \fBMatrix\fP< T > &m)"
.br
.ti -1c
.RI "\fBMatrix\fP< T > & \fBoperator/=\fP (const \fBMatrix\fP< T > &m)"
.br
.ti -1c
.RI "iterator \fBbegin\fP ()"
.br
.ti -1c
.RI "iterator \fBend\fP ()"
.br
.ti -1c
.RI "const_iterator \fBbegin\fP () const"
.br
.ti -1c
.RI "const_iterator \fBend\fP () const"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fBSubVector< T >\fP"
.br
.ti -1c
.RI "class \fBSubMatrix< T >\fP"
.br
.ti -1c
.RI "class \fBConstSubMatrix< T >\fP"
.br
.in -1c

.SH "Author"
.PP 
Generated automatically by Doxygen for Merlin from the source code\&.
