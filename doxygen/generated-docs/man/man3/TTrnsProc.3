.TH "TTrnsProc< T >" 3 "Fri Aug 4 2017" "Version 5.02" "Merlin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
TTrnsProc< T >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <TTrackSim\&.h>\fP
.PP
Inherits \fBTBunchProc< __TYPENAME__ T::bunch_type >\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef __TYPENAME__ T::bunch_type \fBbunch_type\fP"
.br
.ti -1c
.RI "typedef __TYPENAME__ T::B_Integrator \fBintegrator_type\fP"
.br
.ti -1c
.RI "typedef __TYPENAME__ T::ISetBase \fBintegrator_set_base\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBTTrnsProc\fP ()"
.br
.ti -1c
.RI "\fBTTrnsProc\fP (const integrator_set_base &iset)"
.br
.ti -1c
.RI "bool \fBRegisterIntegrator\fP (integrator_type *intg)"
.br
.ti -1c
.RI "void \fBInitialiseProcess\fP (\fBBunch\fP &bunch)"
.br
.ti -1c
.RI "void \fBSetCurrentComponent\fP (\fBAcceleratorComponent\fP &component)"
.br
.ti -1c
.RI "void \fBDoProcess\fP (double ds)"
.br
.ti -1c
.RI "double \fBGetMaxAllowedStepSize\fP () const"
.br
.ti -1c
.RI "void \fBSetIntegratorSet\fP (const integrator_set_base *iset)"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 

.SS "template<class T>
.br
class TTrnsProc< T >"
Transport process template function\&. Defines a transport \fBBunchProcess\fP which uses a concrete \fBComponentTracker\fP class to track provide the tracking\&.
.PP
Template argument T must be a valid concrete \fBComponentTracker\fP class\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class T > \fBTTrnsProc\fP< T >::\fBTTrnsProc\fP ()\fC [inline]\fP"
Construct process using the default integrator set 
.SS "template<class T > \fBTTrnsProc\fP< T >::\fBTTrnsProc\fP (const integrator_set_base & iset)\fC [inline]\fP"
Construct process using an explicit integrator set 
.SH "Member Function Documentation"
.PP 
.SS "template<class T > bool \fBTTrnsProc\fP< T >::RegisterIntegrator (integrator_type * intg)\fC [inline]\fP"
Register an addition (or override) integrator\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Merlin from the source code\&.
