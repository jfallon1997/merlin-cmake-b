.TH "AcceleratorGeometry" 3 "Fri Aug 4 2017" "Version 5.02" "Merlin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
AcceleratorGeometry
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <AcceleratorGeometry\&.h>\fP
.PP
Inherited by \fBCenteredGeometry\fP, \fBGeometryPatch\fP, and \fBSequenceGeometry\fP\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBBeyondExtent\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBBoundaryPlane\fP { \fBentrance\fP, \fBexit\fP }"
.br
.ti -1c
.RI "typedef std::pair< double, double > \fBExtent\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual \fB~AcceleratorGeometry\fP ()"
.br
.ti -1c
.RI "virtual \fBTransform3D\fP \fBGetGeometryTransform\fP (double s0, double s) const =0"
.br
.ti -1c
.RI "\fBTransform3D\fP \fBGetGeometryTransform\fP (double s) const"
.br
.ti -1c
.RI "virtual \fBTransform3D\fP \fBGetGeometryTransform\fP (\fBBoundaryPlane\fP p) const =0"
.br
.ti -1c
.RI "virtual \fBTransform3D\fP \fBGetTotalGeometryTransform\fP () const"
.br
.ti -1c
.RI "virtual Extent \fBGetGeometryExtent\fP () const =0"
.br
.ti -1c
.RI "virtual double \fBGetGeometryLength\fP () const =0"
.br
.in -1c
.SH "Detailed Description"
.PP 
Represents a frame of reference for a section of accelerator lattice\&. An \fBAcceleratorGeometry\fP can be considered a type of three-dimensional space line (R(s)), which is characterised by a single scalar s, the distance along the space line from the origin\&. Each \fBAcceleratorGeometry\fP has a specific length which bounds the allowed values of s (with respect to the local geometry origin)\&. At each position s on the geometry, a local rectangular coordinate frame can be uniquely defined, with its origin at the point s, and its z-axis tangential to the geometry at s\&. The orientation of the local x- and y-axes are also uniquely determined by the sum of any rotations applied going from the origin to s\&.
.PP
The primary responsibilty for an \fBAcceleratorGeometry\fP object is to supply transformations between coordinate frames defined on that geometry\&. 
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBAcceleratorGeometry::BoundaryPlane\fP"
A BoundaryPlane is the X-Y plane (z=0) of the coordinate frame defined at the entrance (start) or exit (end) of the Geometry\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "AcceleratorGeometry::~AcceleratorGeometry ()\fC [inline]\fP, \fC [virtual]\fP"
Virtual destructor\&. 
.SH "Member Function Documentation"
.PP 
.SS "virtual Extent AcceleratorGeometry::GetGeometryExtent () const\fC [pure virtual]\fP"
Returns the local extent of this geometry\&. 
.PP
\fBReturns:\fP
.RS 4
A pair giving the extent of this geometry\&. 
.RE
.PP

.PP
Implemented in \fBGeometryPatch\fP, \fBSequenceGeometry\fP, and \fBCenteredGeometry\fP\&.
.SS "virtual double AcceleratorGeometry::GetGeometryLength () const\fC [pure virtual]\fP"
Returns the total arc-length of the geometry\&. 
.PP
\fBReturns:\fP
.RS 4
A double giving the total length of this geometry\&. 
.RE
.PP

.PP
Implemented in \fBGeometryPatch\fP, \fBSequenceGeometry\fP, and \fBCenteredGeometry\fP\&.
.SS "virtual \fBTransform3D\fP AcceleratorGeometry::GetGeometryTransform (double s0, double s) const\fC [pure virtual]\fP"
Return the three-dimensional transformation from the frame at s0 to the frame at s\&. s and s0 are in the geometry's s-frame, and must be within the geometry extents\&. 
.PP
\fBParameters:\fP
.RS 4
\fIs0\fP The location at which the transform should be evalutated from\&. 
.br
\fIs\fP The location at which the transform should be evalutated to\&. 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIThrows\fP a \fBBeyondExtent\fP exception if the requested s values are outside the geometry extent\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
The 3D transformation from the entrance to the exit of this geometry\&. 
.RE
.PP

.PP
Implemented in \fBArcGeometry\fP, \fBSequenceGeometry\fP, \fBGeometryPatch\fP, and \fBRectangularGeometry\fP\&.
.SS "\fBTransform3D\fP AcceleratorGeometry::GetGeometryTransform (double s) const\fC [inline]\fP"
Return the three-dimensional transformation from the local origin to the frame at s\&. s is in the geometry's s-frame, and must be within the geometry extents\&. 
.PP
\fBParameters:\fP
.RS 4
\fIs\fP The location at which the transform should be evalutated to\&. 
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIThrows\fP a \fBBeyondExtent\fP exception if the requested s value is outside the geometry extent\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
The 3D transformation from the entrance to the exit of this geometry\&. 
.RE
.PP

.SS "virtual \fBTransform3D\fP AcceleratorGeometry::GetGeometryTransform (\fBBoundaryPlane\fP p) const\fC [pure virtual]\fP"
Returns the transformation from the geometry origin to the specified boundary plane\&. 
.PP
\fBParameters:\fP
.RS 4
\fIp\fP The chosen BoundaryPlane 
.RE
.PP
\fBReturns:\fP
.RS 4
The 3D transformation from the geometry origin to a specified boundary plane (extrance or exit)\&. 
.RE
.PP

.PP
Implemented in \fBArcGeometry\fP, \fBSequenceGeometry\fP, \fBGeometryPatch\fP, and \fBRectangularGeometry\fP\&.
.SS "\fBTransform3D\fP AcceleratorGeometry::GetTotalGeometryTransform () const\fC [virtual]\fP"
Returns the transformation from the entrance plane frame to the exit plane frame\&. 
.PP
\fBReturns:\fP
.RS 4
The 3D transformation from the entrance to the exit of this geometry\&. 
.RE
.PP

.PP
Reimplemented in \fBArcGeometry\fP, \fBSequenceGeometry\fP, \fBGeometryPatch\fP, and \fBRectangularGeometry\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Merlin from the source code\&.
