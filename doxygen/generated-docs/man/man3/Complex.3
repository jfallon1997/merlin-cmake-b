.TH "Complex" 3 "Fri Aug 4 2017" "Version 5.02" "Merlin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Complex
.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef double \fBvalue_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "double \fBreal\fP () const"
.br
.ti -1c
.RI "double \fBimag\fP () const"
.br
.ti -1c
.RI "void \fBreal\fP (double re)"
.br
.ti -1c
.RI "void \fBimag\fP (double im)"
.br
.ti -1c
.RI "\fBComplex\fP (double re=0, double im=0)"
.br
.ti -1c
.RI "\fBComplex\fP & \fBoperator+=\fP (const \fBComplex\fP &rhs)"
.br
.ti -1c
.RI "\fBComplex\fP & \fBoperator\-=\fP (const \fBComplex\fP &rhs)"
.br
.ti -1c
.RI "\fBComplex\fP & \fBoperator*=\fP (const \fBComplex\fP &rhs)"
.br
.ti -1c
.RI "\fBComplex\fP & \fBoperator/=\fP (const \fBComplex\fP &rhs)"
.br
.ti -1c
.RI "\fBComplex\fP & \fBoperator=\fP (double rhs)"
.br
.ti -1c
.RI "\fBComplex\fP & \fBoperator+=\fP (double rhs)"
.br
.ti -1c
.RI "\fBComplex\fP & \fBoperator\-=\fP (double rhs)"
.br
.ti -1c
.RI "\fBComplex\fP & \fBoperator*=\fP (double rhs)"
.br
.ti -1c
.RI "\fBComplex\fP & \fBoperator/=\fP (double rhs)"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "\fBComplex\fP \fBoperator+\fP (const \fBComplex\fP &lhs, const \fBComplex\fP &rhs)"
.br
.ti -1c
.RI "\fBComplex\fP \fBoperator+\fP (const \fBComplex\fP &lhs, double rhs)"
.br
.ti -1c
.RI "\fBComplex\fP \fBoperator+\fP (double lhs, const \fBComplex\fP &rhs)"
.br
.ti -1c
.RI "\fBComplex\fP \fBoperator\-\fP (const \fBComplex\fP &lhs, const \fBComplex\fP &rhs)"
.br
.ti -1c
.RI "\fBComplex\fP \fBoperator\-\fP (const \fBComplex\fP &lhs, double rhs)"
.br
.ti -1c
.RI "\fBComplex\fP \fBoperator\-\fP (double lhs, const \fBComplex\fP &rhs)"
.br
.ti -1c
.RI "\fBComplex\fP \fBoperator*\fP (const \fBComplex\fP &lhs, double rhs)"
.br
.ti -1c
.RI "\fBComplex\fP \fBoperator*\fP (double lhs, const \fBComplex\fP &rhs)"
.br
.ti -1c
.RI "\fBComplex\fP \fBoperator*\fP (const \fBComplex\fP &rhs, const \fBComplex\fP &lhs)"
.br
.ti -1c
.RI "\fBComplex\fP \fBoperator/\fP (const \fBComplex\fP &lhs, double rhs)"
.br
.ti -1c
.RI "\fBComplex\fP \fBoperator/\fP (double lhs, const \fBComplex\fP &rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBComplex\fP &lhs, const \fBComplex\fP &rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBComplex\fP &lhs, const \fBComplex\fP &rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBComplex\fP &lhs, double rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (double lhs, const \fBComplex\fP &rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBComplex\fP &lhs, double rhs)"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (double lhs, const \fBComplex\fP &rhs)"
.br
.ti -1c
.RI "double \fBabs\fP (const \fBComplex\fP &rhs)"
.br
.ti -1c
.RI "double \fBarg\fP (const \fBComplex\fP &rhs)"
.br
.ti -1c
.RI "bool \fBoperator<\fP (const \fBComplex\fP &, const \fBComplex\fP &)"
.br
.ti -1c
.RI "std::ostream & \fBoperator<<\fP (std::ostream &os, const \fBComplex\fP &z)"
.br
.ti -1c
.RI "\fBComplex\fP \fBlog\fP (const \fBComplex\fP &z)"
.br
.in -1c

.SH "Author"
.PP 
Generated automatically by Doxygen for Merlin from the source code\&.
