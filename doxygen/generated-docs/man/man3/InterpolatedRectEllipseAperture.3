.TH "InterpolatedRectEllipseAperture" 3 "Fri Aug 4 2017" "Version 5.02" "Merlin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
InterpolatedRectEllipseAperture
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBInterpolatedAperture\fP, and \fBAperture\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBInterpolatedRectEllipseAperture\fP (std::vector< \fBInterpolatedAperture::ap\fP > ElementApertureList)"
.br
.ti -1c
.RI "virtual bool \fBPointInside\fP (double x, double y, double z) const"
.br
.ti -1c
.RI "virtual double \fBGetRadiusAt\fP (double phi, double z) const"
.br
.ti -1c
.RI "virtual std::string \fBGetApertureType\fP () const"
.br
.ti -1c
.RI "void \fBEnablePrint\fP ()"
.br
.ti -1c
.RI "virtual void \fBprintout\fP (std::ostream &out) const"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "bool \fBPrint\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Member Function Documentation"
.PP 
.SS "std::string InterpolatedRectEllipseAperture::GetApertureType () const\fC [inline]\fP, \fC [virtual]\fP"
Returns the type of the aperture\&. 
.PP
\fBReturns:\fP
.RS 4
A string containing the type of the aperture\&. 
.RE
.PP

.PP
Implements \fBAperture\fP\&.
.SS "double InterpolatedRectEllipseAperture::GetRadiusAt (double phi, double z) const\fC [virtual]\fP"
Returns the radius to the aperture at location z and angle phi\&. 
.PP
\fBParameters:\fP
.RS 4
\fIphi\fP The angle\&. 
.br
\fIz\fP The z position of the particle\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
A double containing the aperture radius\&. 
.RE
.PP

.PP
Implements \fBAperture\fP\&.
.SS "bool InterpolatedRectEllipseAperture::PointInside (double x, double y, double z) const\fC [virtual]\fP"
\fBInterpolatedRectEllipseAperture\fP 
.PP
Implements \fBAperture\fP\&.
.SS "void InterpolatedRectEllipseAperture::printout (std::ostream & out) const\fC [virtual]\fP"
Prints out the \fBAperture\fP parameters to a specified stream\&. 
.PP
\fBParameters:\fP
.RS 4
\fIout\fP The output stream to use\&. 
.RE
.PP

.PP
Reimplemented from \fBAperture\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Merlin from the source code\&.
