.TH "RandomNG" 3 "Fri Aug 4 2017" "Version 5.02" "Merlin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
RandomNG
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <RandomNG\&.h>\fP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static void \fBreset\fP ()"
.br
.ti -1c
.RI "static void \fBreset\fP (unsigned iseed)"
.br
.ti -1c
.RI "static unsigned \fBgetSeed\fP ()"
.br
.ti -1c
.RI "static double \fBnormal\fP (double mean, double variance)"
.br
.ti -1c
.RI "static double \fBnormal\fP (double mean, double variance, double cutoff)"
.br
.ti -1c
.RI "static double \fBuniform\fP (double low, double high)"
.br
.ti -1c
.RI "static double \fBpoisson\fP (double u)"
.br
.ti -1c
.RI "static double \fBlandau\fP ()"
.br
.ti -1c
.RI "static void \fBinit\fP (unsigned iseed=0)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Singleton class for generating continuous floating point numbers from specific distributions\&. Currently only the normal (Gaussian) and uniform distributions are supported\&. 
.SH "Member Function Documentation"
.PP 
.SS "unsigned RandomNG::getSeed ()\fC [inline]\fP, \fC [static]\fP"
Get the seed for the generator\&. 
.SS "void RandomNG::init (unsigned iseed = \fC0\fP)\fC [inline]\fP, \fC [static]\fP"
Initialised the generator\&. Should be called before any other generator function\&. 
.SS "double RandomNG::landau ()\fC [inline]\fP, \fC [static]\fP"
Generates a uniform random number in the range |low,high> inclusive\&. 
.SS "double RandomNG::normal (double mean, double variance)\fC [inline]\fP, \fC [static]\fP"
Generates a random number from a uniform (Gaussian) distribution with the specified mean and variance\&. 
.SS "double RandomNG::normal (double mean, double variance, double cutoff)\fC [inline]\fP, \fC [static]\fP"
Generates a random number from a uniform (Gaussian) distribution with the specified mean and variance\&. The resulting distribution is truncated to +/-cutoff standard deviations\&. 
.SS "double RandomNG::poisson (double u)\fC [inline]\fP, \fC [static]\fP"
Generates a uniform random number in the range |low,high> inclusive\&. 
.SS "void RandomNG::reset (unsigned iseed)\fC [inline]\fP, \fC [static]\fP"
Resets the initial seed for the generator\&. 
.SS "double RandomNG::uniform (double low, double high)\fC [inline]\fP, \fC [static]\fP"
Generates a uniform random number in the range |low,high> inclusive\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Merlin from the source code\&.
