.TH "CircularAperture" 3 "Fri Aug 4 2017" "Version 5.02" "Merlin" \" -*- nroff -*-
.ad l
.nh
.SH NAME
CircularAperture
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <SimpleApertures\&.h>\fP
.PP
Inherits \fBAperture\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBCircularAperture\fP (double r)"
.br
.ti -1c
.RI "double \fBGetRadius\fP () const"
.br
.ti -1c
.RI "double \fBGetDiameter\fP () const"
.br
.ti -1c
.RI "void \fBSetRadius\fP (double r)"
.br
.ti -1c
.RI "void \fBSetDiameter\fP (double d)"
.br
.ti -1c
.RI "virtual bool \fBPointInside\fP (double x, double y, double z) const"
.br
.ti -1c
.RI "virtual double \fBGetRadiusAt\fP (double phi, double z) const"
.br
.ti -1c
.RI "virtual std::string \fBGetApertureType\fP () const"
.br
.ti -1c
.RI "virtual void \fBprintout\fP (std::ostream &out) const"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Represents an aperture with a circular cross-section\&. The aperture is assumed to be extruded along its geometry\&. 
.SH "Member Function Documentation"
.PP 
.SS "std::string CircularAperture::GetApertureType () const\fC [inline]\fP, \fC [virtual]\fP"
Returns the type of the aperture\&. 
.PP
\fBReturns:\fP
.RS 4
A string containing the type of the aperture\&. 
.RE
.PP

.PP
Implements \fBAperture\fP\&.
.SS "double CircularAperture::GetRadiusAt (double phi, double z) const\fC [virtual]\fP"
Returns the radius\&.
.PP
Circular \fBAperture\fP Functions 
.PP
Implements \fBAperture\fP\&.
.SS "bool CircularAperture::PointInside (double x, double y, double z) const\fC [inline]\fP, \fC [virtual]\fP"
Returns true if the point (x,y,z) is within the aperture\&. The z coordinate is ignored\&. 
.PP
Implements \fBAperture\fP\&.
.SS "void CircularAperture::printout (std::ostream & out) const\fC [virtual]\fP"
Prints out the \fBAperture\fP parameters to a specified stream\&. 
.PP
\fBParameters:\fP
.RS 4
\fIout\fP The output stream to use\&. 
.RE
.PP

.PP
Reimplemented from \fBAperture\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Merlin from the source code\&.
